@using HotelReservation.ViewModels
@model PagedResult<RoomViewModel>
@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> UserManager
@inject ApplicationDbContext _context
@{
    var currentUserId = UserManager.GetUserId(User);
    var hotel = _context.Hotels.FirstOrDefault(h => h.ApplicationUserId == currentUserId);
}

<style>
    .room-card {
        transition: box-shadow 0.3s ease;
        border: 1px solid #dee2e6;
        border-radius: 8px;
        height: 100%;
    }

        .room-card:hover {
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            border-color: #007bff; /* Border color on hover */
        }

    .card-body {
        padding: 1rem;
    }

    .btn-action {
        margin-top: 5px;
    }

    .room-image {
        height: 200px; /* Adjust image height */
        object-fit: cover;
        border-top-left-radius: 8px;
        border-top-right-radius: 8px;
    }

    .room-details {
        padding: 1rem;
    }

    .room-actions {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-top: 10px;
    }
</style>

<style>
    .room-card {
        display: flex;
        flex-direction: column;
        height: 100%;
    }

    .room-image {
        height: 200px;
        object-fit: cover;
        width: 100%;
    }

    .room-details {
        flex: 1;
        padding: 1rem;
    }

    .room-actions {
        padding: 1rem;
        text-align: center;
    }

    .btn-action {
        margin: 0.5rem;
        color: #fff;
    }

    .btn-details {
        background-color: #007bff; /* Blue */
    }

    .btn-update {
        background-color: #28a745; /* Green */
    }

    .btn-delete {
        background-color: #dc3545; /* Red */
    }

    .btn-reserve {
        background-color: #ffc107; /* Yellow */
    }

    .btn-action:hover {
        opacity: 0.9;
    }
</style>

<div>
    <h3>Rooms</h3>
    <div class="text-center mt-2">
        <a href="https://localhost:7193/hotel/addroom" class="btn btn-success">Add Room</a>
    </div>
    <div class="row">
        @foreach (var room in Model.Results)
        {
            <div class="col-md-4 mb-3">
                <div class="card room-card">
                    @if (room.RoomPicture != null && room.RoomPicture.Length > 0)
                    {
                        var base64Image = Convert.ToBase64String(room.RoomPicture);
                        <img src="data:image/jpeg;base64,@base64Image" class="card-img-top room-image" alt="Room Picture">
                    }
                    else
                    {
                        <div class="card-img-top d-flex justify-content-center align-items-center" style="height: 200px; background-color: #f0f0f0;">
                            <span class="text-muted">No Image</span>
                        </div>
                    }
                    <div class="room-details">
                        <h5 class="card-title">Room Number: @room.RoomNumber</h5>
                        <p class="card-text">Beds: @room.BedsNumber</p>
                        <p class="card-text">Price per Night: @room.PricePerNight:C</p>
                    </div>

                    @if (User.Identity.IsAuthenticated)
                    {
                        var isOwner = false;
                        @if(hotel!=null)
                        {
                             isOwner = room.HotelId == hotel.Id;

                        }

                if (isOwner)
                        {
                            <div class="room-actions">
                                @Html.ActionLink("Details", "RoomDetails", "Hotel", new { roomId = room.Id }, new { @class = "btn btn-action btn-details" })
                                @Html.ActionLink("Update", "UpdateRoom", "Hotel", new { roomId = room.Id }, new { @class = "btn btn-action btn-update" })
                                @Html.ActionLink("Delete", "DeleteRoom", "Hotel", new { roomId = room.Id }, new { @class = "btn btn-action btn-delete" })
                            </div>
                        }
                        else
                        {
                            <div class="room-actions">
                                @Html.ActionLink("Add Reservation", "CreateReservation", "Customer", new { id = room.Id }, new { @class = "btn btn-action btn-reserve" })
                            </div>
                        }
                    }
                </div>
            </div>
        }
    </div>

    <nav aria-label="Page navigation example">
        <ul class="pagination justify-content-center mt-4">
            <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("HotelProfile", new { pageNumber = Model.CurrentPage - 1, pageSize = Model.PageSize })" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                </a>
            </li>
            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(Model.CurrentPage == i ? "active" : "")">
                    <a class="page-link" href="@Url.Action("HotelProfile", new { pageNumber = i, pageSize = Model.PageSize })">@i</a>
                </li>
            }
            <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("HotelProfile", new { pageNumber = Model.CurrentPage + 1, pageSize = Model.PageSize })" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
        </ul>
    </nav>
</div>
