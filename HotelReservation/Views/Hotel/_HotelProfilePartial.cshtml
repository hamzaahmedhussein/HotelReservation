@model HotelReservation.ViewModels.HotelViewModel

<style>
    .profile-card {
        display: flex;
        align-items: center;
        flex-direction:column;
   justify-content:center;
        width:60%;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        border-radius: 15px;
        padding:10px
      
      
    }

    .profile-image-container {
      
        height: 150px;
     
    }

    .profile-image {
        width: 150px;
        height: 150px;
        border-radius: 50%;
        object-fit: cover;
    }

    .upload-icon {
  
        background-color: rgba(255, 255, 255, 0.8);
        border-radius: 50%;
     
        cursor: pointer;
    }

        .upload-icon input[type="file"] {
            display: none;
        }

    .profile-info {
      
    }

        .profile-info h3 {
            margin-bottom: 10px;
            font-size: 1.5em;
        }

        .profile-info p {
            margin-bottom: 5px;
        }
</style>

<div class="profile-card">
    <div class="profile-image-container d-flex align-items-end justify-content-center">
        <img src="data:image;base64,@(Model.HotelPicture != null ? Convert.ToBase64String(Model.HotelPicture) : "")" class="profile-image" alt="Hotel Profile Picture" id="profilePicture">
        <label for="fileUpload" class="upload-icon">
            <i class="fas fa-camera"></i>
            <input type="file" id="fileUpload" accept="image/*" onchange="uploadPicture(this)">
        </label>
    </div>
    <div class="profile-info">
        <h3>@Model.Name</h3>
        <p><i class="fas fa-map-marker-alt"></i> @Model.Address, @Model.City, @Model.State</p>
        <p><strong>Rating:</strong> @Model.Rating <span class="text-muted">/ 5</span></p>
    </div>
</div>

<script>
   function uploadPicture(input) {
    if (input.files && input.files[0]) {
        const file = input.files[0];

        const validImageTypes = ['image/jpeg', 'image/png', 'image/gif'];
        if (!validImageTypes.includes(file.type)) {
            alert("Please upload a valid image (JPEG, PNG, GIF).");
            return;
        }

        const maxSize = 2 * 1024 * 1024; 
        if (file.size > maxSize) {
            alert("The file size should not exceed 2MB.");
            return;
        }

        var formData = new FormData();
        formData.append("file", file);

        fetch('/hotel/UploadHotelPicture', {
            method: 'POST',
            body: formData
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Failed to upload the picture.');
                }
                return response.json();
            })
            .then(data => {
                if (data.imageUrl) {
                    document.getElementById('profilePicture').src = data.imageUrl;
                } else {
                    alert("An error occurred while uploading the picture.");
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert("An error occurred while uploading the picture.");
            });
    }
}

</script>
